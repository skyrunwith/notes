20.接口优于抽象类
   一个接口通常是定义允许多个实现类型的最佳方式
   如果实现一个重要接口，应该强烈考虑提供一个骨架实现类，提供默认实现，以便接口的所有实现者都可以使用它
21.为后代设计接口
   JDK8以后新增默认方法：允许实现接口的类直接使用，而不必实现默认方法
   默认方法有风险
22.接口仅用来定义类型
   接口只能用于定义类型，不应该仅用于导出常量
24.支持使用静态成员类而不是非静态类
	嵌套类：静态成员类、非静态成员类、匿名类、局部类
	静态成员类和宿主类是隔离的、非静态类可以调用宿主方法
	如果一个嵌套类需要在一个方法外可见，则使用成员类，如果一个成员类的每个实例都需要一个对其宿主实例的引用，使其成为非静态，否则为静态
	如果一个嵌套类属于一个方法内部，并且存在一个预置类型来说明这个了类的特征，则为匿名类，否则为局部类
27.消除费检查警告：
	尽可能消除每一个未经检查警告
	如果不能消除警告，用@SuppressWarning("unchecked")抑制警告
	SuppressWarning尽可能在小范围中使用，并且需要添加注释，说明为什么是安全的
38. 接口模拟可扩展枚举：虽然不能编写可扩展枚举，但是可以编写接口配合实现接口的基本的枚举类型，进行模拟，换句话说，枚举可以实现接口
39. 注解优于命名模式：
	可以用注解的地方，没有理由用命名模式
	程序员都应该使用Java提供的预定义注解类型
	使用其他工具主机，由于没有标准化，换工具时会带来不必要的工作量
40. 始终使用Override注解：
	应该在要重写父类声明的每个方法声明上使用Override注解
	Override可用于重写接口和类的方法声明
	Override在重载时编译器会报错，如不加，也不报错，可帮助程序员发现错误
41.使用标记接口定义类型：
	如果标记适用于除类或接口意外的任何元素，则必须使用注解，因为只能使用类和接口来实现或扩展接口
	如果正在编写ElementType.TYPE的标记注解类型，则可能使用标记接口更合适
	
42.Lambda表达式优于匿名类
	Lambda表达式更简洁清晰，除非必须创建非函数式接口类型的实例，否则不要使用匿名类作为函数对象
	lambda表达式中不能使用this，lambda不能序列化（这两种情况应该使用匿名类）
	